
<< 이벤트 처리 >>
	==> 웹 화면에서 사용자가
		키보드를 누르거나, 마우스를 클릭하거나, 윈도우의 크기를 조절하는
		행위들은 웹 프로그램에 영향을 미치게 된다.
		이러한 행위를 "이벤트" 라고 하고, 이러한 이벤트가 발생했을때
		프로그램에 미치게 될 내용을 작성 할 수 있다.
		
		자바스크립트에서는
		이미 키보드를 누르거나, 마우스를 클릭하는 등의 이벤트가 이미 만들어져 있고 필요하다면 내가 만드는
		프로그램에서 필요한 곳에 해당 이벤트에 시키고자하는 일(함수)를 연결 시켜주면 된다.
		==> 이벤트 핸들러
		
<< this 사용 >>
	이벤트가 연결된 함수에서
	이벤트가 발생한 노드 자신을 의미하는
	this를 사용할 수 있다.
	
-----------------------------------------------------------------------------------------------

<< 이벤트 연결하기 >>

1. 인라인 이벤트 연결
	html태그 내부에 자바스크립트 코드를 넣어서 이벤트 연결
	
	1) 태그에 직접 명령어(들)을 쓰는 방식
	2) 태그에 동작할 함수를 연결하는 방식

2. 고전 이벤트 연결
	html태그 내부에 직접연결하지 않고
	자바스크립트로 대상이 되는 노드를 창아서 이벤트를 연결하는 방식
	
-------------------------------------------------------------------------

<< 새로운 노드 생성하기 >>

1. innerHTML

	<div id="result"></div>
	
	let str = "<h1>hello</h1>";
	document.querySelector("#result").innerHTML = str;

2. document.createElement()
	<div id="result"></div>
	
	let h1 = documet.createElement("h1");
	let txt = document.createTextNode("hello");
	h1.appendChild(txt);
	document.querySelector("result").appendChild(h1);

----------------------------------------------------------------------------

<< 같은 값인지 판별 >>
	
	==		<-- 자료형이 달라도 같은 값을 갖고 있으면 true
	===		<-- 자료형도 같고 같은 값을 갖고 있으면 true

-------------------------------------------------------------------------

<< 이벤트 연결하기 >>

1) 노드.on이벤트이름 = function(){

	}

2) 노드.addEventListener("이벤트이름", function(){});

-----------------------------------------------------------


-------------------------------------------------------------

<div id="outer">
	<div id="inner">
		<p id="p">
			<a id = "a" href="#">Hello</a>
		</p>
	</div>
</div>

위와 같이 계층형의 노드로 구성되어 있을 때
부모노드에만 이벤트를 연결하여
누가 이벤트가 발생하였는지 판별할 수 있다.

window.onload = function(){
	document.querySelector("#outer").addEventListener("click", function(){
		let target = event.target;
		alert(target)
		alert(target.tagName) <-- 이벤트가 발생한 태그이름을 확인할 수 있다.(대문자)
	});
}