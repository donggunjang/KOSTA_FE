div		==> block 형식
span	==> inline 형식


display:	block을 inline으로 
			inline을 block으로 배치방식을 변경
			

block			: 세로배치, 크기설정O
inline			: 가로배치, 크기설정X
inline-block	: 가로배치, 크기설정O	
none			: 보이지않게


<< 요소를 안보이게 하기 >>
visibility:hidden;			<--- 그 요소의 공간을 남겨두고 안보이게 합니다.
display:none;				<--- 처음부터 그 요소가 없었던 것 처럼 공간을 제거

-----------------------------------------------------------------------

<< 배경이미지 설정하기 >>

background-image: url("이미지이름");
==> 기본적으로 배경이미지를 설정하게 되면
	벽지의 패턴처럼 가록, 세로 반복하여 보여줍니다.
	
background-repeat: no-repeat;
==> 반복하지 않도록 설정

background-repeat: repeat-x;
==> x축으로만 반복

background-repeat: repeat-y;
==> y축으로만 반복

---------------------------------------------------------------

<< 배경이미지를 요소의 가운데로 맞추기 >>
background-repeat: no-repeat;
background-position:center;
background-size: cover;				<--- 배경이미지의 크기를 요소에 크기에 맞게 조정해 줍니다.


---------------------------------------------------------------

<< 배경이미지를 특정위치에 고정 시키기 >>
 background-attachment: fixed;
 			==> 한 화면에 내용을 다 보여줄 수 없고 스크롤이 있는 경우
 				스크롤을 움직여도 항상 고정된 위치에 배경이미지를 보여 준다.
 				
 				기본값은 scroll이며
 				스크롤이 변경되면 배경이미지가 보이지 않습니다.
 			
 
------------------------------------------------------------------------

background-image			==> 배경이미지 설정
background-size				==> 배경이미지 크기 설정
background-repeate			==> 배경이미지 반복 설정
background-attachment		==> scroll, fixed, 배경이미지의 부착형태 설정
background-position			==> 배경이미지의 위치 설정

위의 속성들을 한꺼번에 설정할 수 있어요.
background: lightblue url("img_tree.gif") no-repeat fixed center;

background: url("bg.png") no-repeat fixed right top;

-------------------------------------------------------------

<< 글자 모양 >>

font-szie			: 글자크기
font-family			: 글꼴
font-style			: 글자스타일
font-weight			: 글자두께

italic bold 32px 궁서체;
font: font-style font-weight font-size font-family	<-- 순서를 지켜야 합니다.

-------------------------------------------------------------
<< 요소를 원하는 곳에 배치하기 >>

position: absolute;				<--- 요소를 원하는 곳에 배치하여 위하여 설정한다.
left: 10px;						<--- 가로 위치를 설정, 오른쪽으로 가야 증가
top: 10px;						<--- 세로위치를 설정, 아래쪽으로 가야 증가
==> 부모노드 기준으로 좌측상단이 0,0

z-index:100;
노드들이 겹치될때
쌓이는 순서를 정하기 위하여 
z-index를 설정합니다.
z-index의 값이 높을수로 위에 보이게 됩니다.
z-index를 따로 설정하지 않으면 자동으로 나중에 만든 요소가 위에 쌓이게 됩니다.

---------------------------------------------------------------


<div id="wrap">
	<div class="box"></div>				
	<div class="box"></div>
	<div class="box"></div>
</div>


#wrap{
	width: 400px;
	height: 100px;
	border: 3px solid black;
	position: relative;			<--- 절대위치에 배치하는 요소를 갖는 부모노드는 반드시 position:relative 이어야 합니다.				
	/*overflow: hidden;*/
	overflow: scroll;		
}
	

<< 자식이 부모를 넘칠 때 >>
overflow: hidden;	--> 넘치는 자식들은 안보이게.
overflow: scroll;	--> 스크롤을 만들어줌.

------------------------------------------------------------------------------------

float:left		==> 노드를 왼쪽 정렬하여 배치하기
float:right		==> 노드를 오른쪽 정렬하여 배치하기

float를 설정한 경우 계속하여 다음의 노드도 float의 영향을 받을 수 있기 때문에 
다음중에 선택하여 float설정을 제거하도록 해야 합니다.
clear:left
clear:right
clear:both

------------------------------------------------------------------------------------

<< 그림자 설정하기 >>

text-shadow	: 글자에 그림자 설정
box-shadow 	: 박스에 그림자 설정

text-shadow: 5px 5px 5px 	black
			 가로 세로 흐림정도 색상
			 
box-shadow: 5px 5px 5px 	black	
			가로 세로 흐림정도 색상
			
					 





----------------------------------------------------------

<< 수평 레이아웃 (가로로 배치하기) >>

<div class="conatiner">
		<div class="item">메뉴-1</div>
		<div class="item">메뉴-2</div>
		<div class="item">메뉴-3</div>
		<div class="item">메뉴-4</div>
</div>
<p  class="item clear">


item들을 가로로 배치하기 위하여 
item클래스에 float를 left로 설정하여 
다음 노드에 영향을 끼치지 않도록 하기 위하여 
부모노드인 container에 overflow: hidden; 으로 설정할 수도 있고 
새로시작하는 노드인 clear에 clear:both로 설정할 수도 있다.



----------------------------------------------

#container{
		position:relative;				<--- 부모컨테이너를 기준으로 절대위치에 배치하기
		width: 500px;
		height: 500px;
		border: 3px solid black;
}

----------------------------------------------

.circle{
		width: 100px;
		height: 100px;
		border: 1px solid black;
		border-radius: 50% 50%;			<---- 원모양으로 만들기
		position: absolute;
}

---------------------------------------------------
<< 가로, 세로 가운데 배치하기 >>

#container{
	width: 500px;			<--- 요소의 가로길이
	height: 250px;			<--- 요소의 세로길이
	background: orange;		
	position: absolute;		<--- 절대위치로 설정
	left: 50%;				<--- x좌표를 가로길이의 절반
	top: 50%;				<--- y좌표를 세로길이의 절반
	margin-left: -250px;	<--- x 바깥쪽 여백을 -가로길이의 절반
	margin-top: -125px;		<--- y 바깥쪽 여백을 -세로길이의 절반
}

----------------------------------
h1{
		border: solid 1px black;
		width: 300px;
		white-space: nowrap;        <--- 글자의 수가 요소의 가로 길이를 벗어나면 자동으로 줄을 바꿔줍니다. 
									    	줄바꾸지 않도록 설정하기 위하여 nowrap, 크기를 무시하고 
										    가로로 쭉~ 써 줍니다.
		overflow: hidden;		    <--- 크기를 벗어나면 잘나내도록 합니다.
		text-overflow: ellipsis;	<--- 보여줄 글자가 크기를 넘쳐날때 보여줄 글자가 더 있다는 표시로 ...을 출력합니다.
}

<h1>앨리슨 교수는 또 신뢰의 중요성을 강조하며 "일본 전문가들이 말하는 내용을 신뢰해야 하고 그렇지 않다면 질문을 통해 정보를 얻어나가야 한다"고 덧붙였다.</h1>

-----------------------------------------------------------------------------------------
.top_bar{
		background: pink;
		height: 50px;
		left: 0;
		top: 0;
		right: 0;
		position: fixed;		<---- 페이지 내용이 많아서 스크롤을 내리더라도 
										요소를 항상 그 곳에 고정 시키기 위하여 사용함.  
}

--------------------------------------------------------------------------------------------

반응형 웹 :
	==> 웹 페이지 하나로도 사용자가 사용하는 브라우저에 따라 
			알맞게 서비스하는 것을 말합니다.
			사용자의 브라우저가 데스크탑이면 데스크탑에 맞도록, 
			태블릿 PC이면 태블릿 PC에 맞도록
			스마트폰이면 스마트폰에 알맞도록 자동으로 반응해서 변경되는 것을 말합니다.
			
	==> 미디어쿼리	(media query)
				사용자가 요청하는 장치에 따라 
				css를 다르게 설정하기 위한 기술
				
--------------------------------------------------------------------------------------------

반응형 웹을 위한 설정

1. meta 태그
	==> 웹 페이지에 추가 정보를 제공
	
2. 뷰포트
	==> 뷰포트(viewport)는 컴퓨터 그래픽스에서 내용을 표시하는 영역
	==> 스마트폰이나 태블릿pc의 반응형 웹 처리를 위해는 반드시 뷰포트를 설정 해야 합니다.
	
	<meta name="viewport" 
			content="width=device-width, initial-scale=1.0">
		
	width				화면너비			240, device-width		
	height				화면높이			800, device-height
	initial-scale		초기 확대 비율		1.0
	user-scalable		확대 축소 여부		yes,no
	minimum-scale		1.0
	maximum-scale		2.0
	
	
	

				
					
			








-----------------------------------------------------------------------------------------
- 오늘 학습한 내용에 대하여 요약, 정리하고 궁금한점 질문 하도록 합니다.
- 요약, 정리가 다 끝나면 각 팀별로 프로젝트 관련 회의를 진행합니다.













	